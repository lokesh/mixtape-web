3.2.10 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:@options{ :@children[o:Sass::Tree::ImportNode:@imported_file0:@imported_filename"shared;0;@;	[ :
@lineio:Sass::Tree::CommentNode
:
@type:silent:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;@;	[ ;io:Sass::Tree::VariableNode:@guarded"!default:
@name" default-transition-property:
@expro:Sass::Script::String	;:identifier;"all;@;i;@;	[ ;io;;"!default;" default-transition-duration;o:Sass::Script::Number:@numerator_units["s:@original"1s;i;@:@denominator_units[ ;i;@;	[ ;io;;"!default;" default-transition-function;o:Sass::Script::Bool;F;@;i;@;	[ ;io;;"!default;"default-transition-delay;o;;F;@;i;@;	[ ;io;;"!default;"#transitionable-prefixed-values;o:Sass::Script::List	:@separator:
comma;[o;	;;;"transform;@;io;	;;;"transform-origin;@;i;@;i;@;	[ ;io;
;;;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;@;	[ ;i!o:Sass::Tree::MixinDefNode;"transition-property;T;@;	[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:@options{ :
@linei1:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of:@keywords{ ;@	:@splat0;i1:
@args[o:Sass::Script::Variable	;"property-1;@	;i1:@underscored_name"property_1;@	;i10[o:Sass::Tree::VariableNode:@guarded0;"property-1:
@expro;;"unquote;{ ;@	;0;i1;[o;	;"property-1;@	;i1;"property_1;@	:@children[ ;i1o;;0;"properties;o:Sass::Script::Funcall;"compact:@keywords{ ;@:@splat0;i2:
@args[o:Sass::Script::Variable	;"property-1;@;i2:@underscored_name"property_1o;&	;"property-2;@;i2;'"property_2o;&	;"property-3;@;i2;'"property_3o;&	;"property-4;@;i2;'"property_4o;&	;"property-5;@;i2;'"property_5o;&	;"property-6;@;i2;'"property_6o;&	;"property-7;@;i2;'"property_7o;&	;"property-8;@;i2;'"property_8o;&	;"property-9;@;i2;'"property_9o;&	;"property-10;@;i2;'"property_10;@;	[ ;i2u;!Å[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:@options{ :
@linei3:@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode;[" -webkit-transition-property:@valueo:Sass::Script::Funcall;"prefixed-for-transition:@keywords{ ;@:@splat0;i3:
@args[o:Sass::Script::String	:
@type:identifier;"-webkit;@;i3o; 	;"properties;@;i3;	"properties:@prop_syntax:new;@:
@tabsi :@children[ ;i3u;!Á[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:@options{ :
@linei4:@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode;["-moz-transition-property:@valueo:Sass::Script::Funcall;"prefixed-for-transition:@keywords{ ;@:@splat0;i4:
@args[o:Sass::Script::String	:
@type:identifier;"	-moz;@;i4o; 	;"properties;@;i4;	"properties:@prop_syntax:new;@:
@tabsi :@children[ ;i4u;!¹[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:@options{ :
@linei5:@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode;["-o-transition-property:@valueo:Sass::Script::Funcall;"prefixed-for-transition:@keywords{ ;@:@splat0;i5:
@args[o:Sass::Script::String	:
@type:identifier;"-o;@;i5o; 	;"properties;@;i5;	"properties:@prop_syntax:new;@:
@tabsi :@children[ ;i5o:Sass::Tree::PropNode;["transition-property;o;&	;"properties;@;i6;'"properties:@prop_syntax:new;@:
@tabsi ;	[ ;i6;$0;i0;%[[o;&;"property-1;@;'"property_1o;&	;" default-transition-property;@;i&;'" default_transition_property[o;&;"property-2;@;'"property_2o;;F;@;i'[o;&;"property-3;@;'"property_3o;;F;@;i([o;&;"property-4;@;'"property_4o;;F;@;i)[o;&;"property-5;@;'"property_5o;;F;@;i*[o;&;"property-6;@;'"property_6o;;F;@;i+[o;&;"property-7;@;'"property_7o;;F;@;i,[o;&;"property-8;@;'"property_8o;;F;@;i-[o;&;"property-9;@;'"property_9o;;F;@;i.[o;&;"property-10;@;'"property_10o;;F;@;i/o;
;;;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;@;	[ ;i9o; ;"transition-duration;T;@;	[u;!Ù[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:@options{ :
@lineiI:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of:@keywords{ ;@	:@splat0;iI:
@args[o:Sass::Script::Variable	;"duration-1;@	;iI:@underscored_name"duration_1;@	;iI0[o:Sass::Tree::VariableNode:@guarded0;"duration-1:
@expro;;"unquote;{ ;@	;0;iI;[o;	;"duration-1;@	;iI;"duration_1;@	:@children[ ;iIo;;0;"durations;o;";"compact;#{ ;@;$0;iJ;%[o;&	;"duration-1;@;iJ;'"duration_1o;&	;"duration-2;@;iJ;'"duration_2o;&	;"duration-3;@;iJ;'"duration_3o;&	;"duration-4;@;iJ;'"duration_4o;&	;"duration-5;@;iJ;'"duration_5o;&	;"duration-6;@;iJ;'"duration_6o;&	;"duration-7;@;iJ;'"duration_7o;&	;"duration-8;@;iJ;'"duration_8o;&	;"duration-9;@;iJ;'"duration_9o;&	;"duration-10;@;iJ;'"duration_10;@;	[ ;iJo:Sass::Tree::MixinNode;"experimental;#{ ;@;	[ ;$0;iM;%[o;	;;;"transition-duration;@;iKo;&	;"durations;@;iK;'"durationso;	;;;"	-moz;@;iLo;	;;;"-webkit;@;iLo;	;;;"-o;@;iLo:!Sass::Script::UnaryOperation	:@operator:not;@:@operando;	;;;"-ms;@;iL;iLo;-	;.;/;@;0o;	;;;"-khtml;@;iL;iLo;	;;;"official;@;iL;$0;iH;%[[o;&;"duration-1;@;'"duration_1o;&	;" default-transition-duration;@;i>;'" default_transition_duration[o;&;"duration-2;@;'"duration_2o;;F;@;i?[o;&;"duration-3;@;'"duration_3o;;F;@;i@[o;&;"duration-4;@;'"duration_4o;;F;@;iA[o;&;"duration-5;@;'"duration_5o;;F;@;iB[o;&;"duration-6;@;'"duration_6o;;F;@;iC[o;&;"duration-7;@;'"duration_7o;;F;@;iD[o;&;"duration-8;@;'"duration_8o;;F;@;iE[o;&;"duration-9;@;'"duration_9o;;F;@;iF[o;&;"duration-10;@;'"duration_10o;;F;@;iGo;
;;;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;@;	[ ;iPo; ;"transition-timing-function;T;@;	[o;;0;"function-1;o;";"unquote;#{ ;@;$0;ia;%[o;&	;"function-1;@;ia;'"function_1;@;	[ ;iao;;0;"functions;o;";"compact;#{ ;@;$0;ib;%[o;&	;"function-1;@;ib;'"function_1o;&	;"function-2;@;ib;'"function_2o;&	;"function-3;@;ib;'"function_3o;&	;"function-4;@;ib;'"function_4o;&	;"function-5;@;ib;'"function_5o;&	;"function-6;@;ib;'"function_6o;&	;"function-7;@;ib;'"function_7o;&	;"function-8;@;ib;'"function_8o;&	;"function-9;@;ib;'"function_9o;&	;"function-10;@;ib;'"function_10;@;	[ ;ibo;,;"experimental;#{ ;@;	[ ;$0;ie;%[o;	;;;"transition-timing-function;@;ico;&	;"functions;@;ic;'"functionso;	;;;"	-moz;@;ido;	;;;"-webkit;@;ido;	;;;"-o;@;ido;-	;.;/;@;0o;	;;;"-ms;@;id;ido;-	;.;/;@;0o;	;;;"-khtml;@;id;ido;	;;;"official;@;id;$0;i`;%[[o;&;"function-1;@;'"function_1o;&	;" default-transition-function;@;iV;'" default_transition_function[o;&;"function-2;@;'"function_2o;;F;@;iW[o;&;"function-3;@;'"function_3o;;F;@;iX[o;&;"function-4;@;'"function_4o;;F;@;iY[o;&;"function-5;@;'"function_5o;;F;@;iZ[o;&;"function-6;@;'"function_6o;;F;@;i[[o;&;"function-7;@;'"function_7o;;F;@;i\[o;&;"function-8;@;'"function_8o;;F;@;i][o;&;"function-9;@;'"function_9o;;F;@;i^[o;&;"function-10;@;'"function_10o;;F;@;i_o;
;;;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;@;	[ ;iho; ;"transition-delay;T;@;	[u;!Ê[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:@options{ :
@lineix:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of:@keywords{ ;@	:@splat0;ix:
@args[o:Sass::Script::Variable	;"delay-1;@	;ix:@underscored_name"delay_1;@	;ix0[o:Sass::Tree::VariableNode:@guarded0;"delay-1:
@expro;;"unquote;{ ;@	;0;ix;[o;	;"delay-1;@	;ix;"delay_1;@	:@children[ ;ixo;;0;"delays;o;";"compact;#{ ;@;$0;iy;%[o;&	;"delay-1;@;iy;'"delay_1o;&	;"delay-2;@;iy;'"delay_2o;&	;"delay-3;@;iy;'"delay_3o;&	;"delay-4;@;iy;'"delay_4o;&	;"delay-5;@;iy;'"delay_5o;&	;"delay-6;@;iy;'"delay_6o;&	;"delay-7;@;iy;'"delay_7o;&	;"delay-8;@;iy;'"delay_8o;&	;"delay-9;@;iy;'"delay_9o;&	;"delay-10;@;iy;'"delay_10;@;	[ ;iyo;,;"experimental;#{ ;@;	[ ;$0;i|;%[o;	;;;"transition-delay;@;izo;&	;"delays;@;iz;'"delayso;	;;;"	-moz;@;i{o;	;;;"-webkit;@;i{o;	;;;"-o;@;i{o;-	;.;/;@;0o;	;;;"-ms;@;i{;i{o;-	;.;/;@;0o;	;;;"-khtml;@;i{;i{o;	;;;"official;@;i{;$0;iw;%[[o;&;"delay-1;@;'"delay_1o;&	;"default-transition-delay;@;im;'"default_transition_delay[o;&;"delay-2;@;'"delay_2o;;F;@;in[o;&;"delay-3;@;'"delay_3o;;F;@;io[o;&;"delay-4;@;'"delay_4o;;F;@;ip[o;&;"delay-5;@;'"delay_5o;;F;@;iq[o;&;"delay-6;@;'"delay_6o;;F;@;ir[o;&;"delay-7;@;'"delay_7o;;F;@;is[o;&;"delay-8;@;'"delay_8o;;F;@;it[o;&;"delay-9;@;'"delay_9o;;F;@;iu[o;&;"delay-10;@;'"delay_10o;;F;@;ivo;
;;;["*/* Transition all-in-one shorthand */;@;	[ ;io; ;"single-transition;T;@;	[o;,;"transition;#{ ;@;	[ ;$0;i;%[o;";"compact;#{ ;@;$0;i;%[o;	;:
space;[	o;&	;"property;@;i;'"propertyo;&	;"duration;@;i;'"durationo;&	;"function;@;i;'"functiono;&	;"
delay;@;i;'"
delay;@;i;$0;i;%[	[o;&;"property;@;'"propertyo;&	;" default-transition-property;@;i};'" default_transition_property[o;&;"duration;@;'"durationo;&	;" default-transition-duration;@;i~;'" default_transition_duration[o;&;"function;@;'"functiono;&	;" default-transition-function;@;i;'" default_transition_function[o;&;"
delay;@;'"
delayo;&	;"default-transition-delay;@;i;'"default_transition_delayo; ;"transition;T;@;	[u;!÷[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"default:@options{ :
@linei:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"transition-1;@	;i:@underscored_name"transition_1;@	;i0[o:Sass::Tree::VariableNode:@guarded0;"transition-1:
@expro:Sass::Script::Funcall;"compact:@keywords{ ;@	:@splat0;i:
@args[o:Sass::Script::List	:@separator:
space;
[	o;	;" default-transition-property;@	;i;" default_transition_propertyo;	;" default-transition-duration;@	;i;" default_transition_durationo;	;" default-transition-function;@	;i;" default_transition_functiono;	;"default-transition-delay;@	;i;"default_transition_delay;@	;i;@	:@children[ ;io;;0;"transitions;o;;F;@;i;@;	[ ;iu;![o:Sass::Script::Operation
:@operand2o; 
;o:Sass::Script::String	:
@type:identifier:@value"	list:@options{ :
@linei:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of:@keywords{ ;@
:@splat0;i:
@args[o;;"nth;{ ;@
;0;i;[o:Sass::Script::Variable	;"transition-1;@
;i:@underscored_name"transition_1o:Sass::Script::Number:@numerator_units[ :@original"1;
i;@
:@denominator_units[ ;i;@
;i;:and;o; 
;o;	;;	;
"	list;@
;i;;;o;;"type-of;{ ;@
;0;i;[o;	;"transition-1;@
;i;"transition_1;@
;i;@
;iu:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:@guarded0:
@name"transitions:
@expro:Sass::Script::Funcall;"compact:@keywords{ :@options{ :@splat0:
@linei:
@args[o:Sass::Script::Variable	;"transition-1;@;i:@underscored_name"transition_1o;	;"transition-2;@;i;"transition_2o;	;"transition-3;@;i;"transition_3o;	;"transition-4;@;i;"transition_4o;	;"transition-5;@;i;"transition_5o;	;"transition-6;@;i;"transition_6o;	;"transition-7;@;i;"transition_7o;	;"transition-8;@;i;"transition_8o;	;"transition-9;@;i;"transition_9o;	;"transition-10;@;i;"transition_10;@:@children[ ;i[o:Sass::Tree::VariableNode:@guarded0;"transitions:
@expro;;"	join;{ ;@
;0;i;[o;	;"transition-1;@
;i;"transition_1o;;"compact;{ ;@
;0;i;[o;	;"transition-2;@
;i;"transition_2o;	;"transition-3;@
;i;"transition_3o;	;"transition-4;@
;i;"transition_4o;	;"transition-5;@
;i;"transition_5o;	;"transition-6;@
;i;"transition_6o;	;"transition-7;@
;i;"transition_7o;	;"transition-8;@
;i;"transition_8o;	;"transition-9;@
;i;"transition_9o;	;"transition-10;@
;i;"transition_10o;	;;	;
"
comma;@
;i;@
:@children[ ;io;;0;"delays;o;";"comma-list;#{ ;@;$0;i;%[ ;@;	[ ;io;;0;"has-delays;o;;F;@;i;@;	[ ;io;;0;"webkit-value;o;";"comma-list;#{ ;@;$0;i;%[ ;@;	[ ;io;;0;"moz-value;o;";"comma-list;#{ ;@;$0;i;%[ ;@;	[ ;io;;0;"o-value;o;";"comma-list;#{ ;@;$0;i;%[ ;@;	[ ;io;
;;;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;@;	[ ;i o:Sass::Tree::EachNode;T;@:	@var"transition;	[o;
;;;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;@;	[ ;i£o;;0;"property;o;";"nth;#{ ;@;$0;i¥;%[o;&	;"transition;@;i¥;'"transitiono;;[ ;"1;i;@;[ ;i¥;@;	[ ;i¥o;;0;"duration;o;;F;@;i¦;@;	[ ;i¦o;;0;"timing-function;o;;F;@;i§;@;	[ ;i§o;;0;"
delay;o;;F;@;i¨;@;	[ ;i¨u;![o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"1:@valuei:@options{ :@denominator_units[ :
@linei©:@operator:gt:@operand1o:Sass::Script::Funcall:
@name"length:@keywords{ ;@
:@splat0;i©:
@args[o:Sass::Script::Variable	;"transition;@
;i©:@underscored_name"transition;@
;i©0[o:Sass::Tree::VariableNode:@guarded0;"duration:
@expro;;"nth;{ ;@
;0;i©;[o;	;"transition;@
;i©;"transitiono;;[ ;	"2;
i;@
;@;i©;@
:@children[ ;i©u;![o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"2:@valuei:@options{ :@denominator_units[ :
@lineiª:@operator:gt:@operand1o:Sass::Script::Funcall:
@name"length:@keywords{ ;@
:@splat0;iª:
@args[o:Sass::Script::Variable	;"transition;@
;iª:@underscored_name"transition;@
;iª0[o:Sass::Tree::VariableNode:@guarded0;"timing-function:
@expro;;"nth;{ ;@
;0;iª;[o;	;"transition;@
;iª;"transitiono;;[ ;	"3;
i;@
;@;iª;@
:@children[ ;iªu;!Y[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"3:@valuei:@options{ :@denominator_units[ :
@linei«:@operator:gt:@operand1o:Sass::Script::Funcall:
@name"length:@keywords{ ;@
:@splat0;i«:
@args[o:Sass::Script::Variable	;"transition;@
;i«:@underscored_name"transition;@
;i«0[o:Sass::Tree::VariableNode:@guarded0;"
delay:
@expro;;"nth;{ ;@
;0;i«;[o;	;"transition;@
;i«;"transitiono;;[ ;	"4;
i	;@
;@;i«;@
:@children[ ;i«o;;0;"has-delays;o:Sass::Script::Bool;
T;@
;i«;@
;[ ;i«o;
;;;[";/* If a delay is provided without a timing function */;@;	[ ;i­u;!g[o:Sass::Script::Operation
:@operand2o:!Sass::Script::UnaryOperation	:@operator:not:@options{ :@operando:Sass::Script::Variable	:
@name"
delay;
@:
@linei®:@underscored_name"
delay;i®;:and:@operand1o:Sass::Script::Funcall;"is-time:@keywords{ ;
@:@splat0;i®:
@args[o;	;"timing-function;
@;i®;"timing_function;
@;i®0[o:Sass::Tree::VariableNode:@guarded0;"
delay:
@expro;	;"timing-function;
@;i®;"timing_function;
@:@children[ ;i®o;;0;"timing-function;o:Sass::Script::Bool:@valueF;
@;i®;
@;[ ;i®o;;0;"has-delays;o;;T;
@;i®;
@;[ ;i®o;
;;;["9/* Keep a list of delays in case one is specified */;@;	[ ;i°o;;0;"delays;o;";"append;#{ ;@;$0;i±;%[o;&	;"delays;@;i±;'"delayso;";"if;#{ ;@;$0;i±;%[o;&	;"
delay;@;i±;'"
delayo;&	;"
delay;@;i±;'"
delayo;;["s;"0s;i ;@;[ ;i±;@;	[ ;i±o;;0;"webkit-value;o;";"append;#{ ;@;$0;i³;%[o;&	;"webkit-value;@;i³;'"webkit_valueo;";"compact;#{ ;@;$0;i³;%[o;	;;1;[o;";"prefixed-for-transition;#{ ;@;$0;i³;%[o;	;;;"-webkit;@;i³o;&	;"property;@;i³;'"propertyo;&	;"duration;@;i³;'"durationo;&	;"timing-function;@;i³;'"timing_function;@;i³;@;	[ ;i³o;;0;"moz-value;o;";"append;#{ ;@;$0;i´;%[o;&	;"moz-value;@;i´;'"moz_valueo;";"compact;#{ ;@;$0;i´;%[o;	;;1;[	o;";"prefixed-for-transition;#{ ;@;$0;i´;%[o;	;;;"	-moz;@;i´o;&	;"property;@;i´;'"propertyo;&	;"duration;@;i´;'"durationo;&	;"timing-function;@;i´;'"timing_functiono;&	;"
delay;@;i´;'"
delay;@;i´;@;	[ ;i´o;;0;"o-value;o;";"append;#{ ;@;$0;iµ;%[o;&	;"o-value;@;iµ;'"o_valueo;";"compact;#{ ;@;$0;iµ;%[o;	;;1;[	o;";"prefixed-for-transition;#{ ;@;$0;iµ;%[o;	;;;"-o;@;iµo;&	;"property;@;iµ;'"propertyo;&	;"duration;@;iµ;'"durationo;&	;"timing-function;@;iµ;'"timing_functiono;&	;"
delay;@;iµ;'"
delay;@;iµ;@;	[ ;iµ;i¢:
@listo;&	;"transitions;@;i¢;'"transitionsu;!Ý[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:@options{ :
@linei¸:@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode;["-webkit-transition:@valueo; 	;"webkit-value;@;i¸;	"webkit_value:@prop_syntax:new;@:
@tabsi :@children[ ;i¸o:Sass::Tree::CommentNode
:
@type:silent;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;@;[ ;i¹u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@name"has-delays:@options{ :
@lineiº:@underscored_name"has_delays0[o:Sass::Tree::PropNode;["-webkit-transition-delay:@valueo; 	;"delays;@;iº;	"delays:@prop_syntax:new;@:
@tabsi :@children[ ;iºu;!#[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:@options{ :
@linei»:@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode;["-moz-transition:@valueo; 	;"moz-value;@;i»;	"moz_value:@prop_syntax:new;@:
@tabsi :@children[ ;i»u;![o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:@options{ :
@linei¼:@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode;["-o-transition:@valueo; 	;"o-value;@;i¼;	"o_value:@prop_syntax:new;@:
@tabsi :@children[ ;i¼o;(;["transition;o;&	;"transitions;@;i½;'"transitions;);*;@;+i ;	[ ;i½;$0;i;%[[o;&;"transition-1;@;'"transition_1o;	;;;"default;@;i[o;&;"transition-2;@;'"transition_2o;;F;@;i[o;&;"transition-3;@;'"transition_3o;;F;@;i[o;&;"transition-4;@;'"transition_4o;;F;@;i[o;&;"transition-5;@;'"transition_5o;;F;@;i[o;&;"transition-6;@;'"transition_6o;;F;@;i[o;&;"transition-7;@;'"transition_7o;;F;@;i[o;&;"transition-8;@;'"transition_8o;;F;@;i[o;&;"transition-9;@;'"transition_9o;;F;@;i[o;&;"transition-10;@;'"transition_10o;;F;@;io;
;;;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;@;	[ ;iÀo:Sass::Tree::FunctionNode;"comma-list;T;@;	[o:Sass::Tree::ReturnNode	;o;";"	join;#{ ;@;$0;iÂ;%[o;	;;1;[ ;@;iÂo;&	;"	list;@;iÂ;'"	listo;	;;;"
comma;@;iÂ;@;	[ ;iÂ;$0;iÁ;%[[o;&;"	list;@;'"	listo;	;;1;[ ;@;iÁo;
;;;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;@;	[ ;iÅo;5;"prefixed-for-transition;T;@;	[u;!®[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"	list:@options{ :
@lineiÇ:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of:@keywords{ ;@	:@splat0;iÇ:
@args[o:Sass::Script::Variable	;"property;@	;iÇ:@underscored_name"property;@	;iÇu:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:
@name"
index:@keywords{ :@options{ :@splat0:
@lineiÎ:
@args[o:Sass::Script::Variable	;"#transitionable-prefixed-values;@	;
iÎ:@underscored_name"#transitionable_prefixed_valueso;	;"property;@	;
iÎ;"propertyu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Variable	:
@name"property:@options{ :
@lineiÑ:@underscored_name"property;	@
:@children[ ;
iÑ[o:Sass::Tree::ReturnNode	:
@expro: Sass::Script::Interpolation:@aftero;;0:@originally_textF:	@mido;	;"property;@	;
iÏ;"property:@whitespace_after0;@	:@beforeo;;0;:originally_text;o:Sass::Script::String	:
@type:identifier:@value"-;@	;
iÏ;F;@	;0;
iÏ:@whitespace_before0;
iÏ;0;F;o;	;"prefix;@	;
iÏ;"prefix;0;@	;0;
iÏ;i;@	:@children[ ;
iÏ[o:Sass::Tree::VariableNode:@guarded0;"new-list:
@expro;;"comma-list;{ ;@	;0;iÈ;[ ;@	:@children[ ;iÈo:Sass::Tree::EachNode:@has_childrenT;@	:	@var"v;[o;;0;"new-list;o;;"append;{ ;@	;0;iÊ;[o;	;"new-list;@	;iÊ;"new_listo;;"prefixed-for-transition;{ ;@	;0;iÊ;[o;	;"prefix;@	;iÊ;"prefixo;	;"v;@	;iÊ;"v;@	;[ ;iÊ;iÉ:
@listo;	;"property;@	;iÉ;"propertyo:Sass::Tree::ReturnNode	;o;	;"new-list;@	;iÌ;"new_list;@	;[ ;iÌ;$0;iÆ;%[[o;&;"prefix;@;'"prefix0[o;&;"property;@;'"property0o;
;;;["7/* Checks if the value given is a unit of time. */;@;	[ ;iÖo;5;"is-time;T;@;	[u;![o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"number:@options{ :
@lineiØ:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of:@keywords{ ;@	:@splat0;iØ:
@args[o:Sass::Script::Variable	;"
value;@	;iØ:@underscored_name"
value;@	;iØu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Bool:@valueF:@options{ :
@lineiÛ;	@	:@children[ ;
iÛ[o:Sass::Tree::ReturnNode	:
@expro:!Sass::Script::UnaryOperation	;:not;@	:@operando;	;;;@	;o;;"
index;{ ;@	;0;iÙ;[o:Sass::Script::List	:@separator:
space;
[o;	;;	;
"s;@	;iÙo;	;;	;
"ms;@	;iÙ;@	;iÙo;;"	unit;{ ;@	;0;iÙ;[o;	;"
value;@	;iÙ;"
value;iÙ;iÙ;@	:@children[ ;iÙ;$0;i×;%[[o;&;"
value;@;'"
value0;i